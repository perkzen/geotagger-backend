name: Test - Build CI

on: pull_request

env:
  NODE_ENV: test
  PORT: 8000
  GOOGLE_CLIENT_ID: secret
  GOOGLE_CLIENT_SECRET: secret
  GOOGLE_CALLBACK_URL: http://localhost:8000/auth/google/callback
  FACEBOOK_CLIENT_ID: secret
  FACEBOOK_CLIENT_SECRET: secret
  FACEBOOK_CALLBACK_URL: http://localhost:8000/auth/facebook/callback
  AWS_ACCESS_KEY_ID: secret
  AWS_SECRET_ACCESS_KEY: secret
  AWS_S3_BUCKET_NAME: secret
  AWS_S3_REGION: secret

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install Dependencies
        run: npm install

      - name: Lint
        run: npm run lint

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build

  test-e2e:
    runs-on: ubuntu-latest
    needs: lint
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: geotagger
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    env:
      DATABASE_URL: postgresql://admin:admin@localhost:5432/geotagger?schema=public

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install Dependencies
        run: npm ci

      - name: Push Prisma schema to database
        run: npx prisma db push

      - name: Run End-2-End Tests
        run: npm run test:e2e:ci


